"""
Request models for the Kling AI Callback Protocol.
"""
from datetime import datetime
from enum import Enum
from typing import Literal, Optional

from pydantic import BaseModel, Field


class TaskStatus(str, Enum):
    """Status of the task."""
    PENDING = "pending"
    PROCESSING = "processing"
    COMPLETED = "completed"
    FAILED = "failed"


class ParentVideo(BaseModel):
    """Information about the parent video for video generation tasks."""
    video_id: str = Field(..., description="Unique identifier for the parent video")
    url: str | None = Field(None, description="URL to the parent video")
    duration: float | None = Field(None, description="Duration of the video in seconds")


class TaskInfo(BaseModel):
    """Task information provided during task creation."""
    parent_video: Optional[ParentVideo] = Field(
        None,
        description="Information about the parent video if this is a continuation"
    )
    external_task_id: Optional[str] = Field(
        None,
        description="Customer-defined task ID for reference"
    )


class ImageResult(BaseModel):
    """Result of an image generation task."""
    image_url: str = Field(..., description="URL to the generated image")
    width: int = Field(..., description="Width of the image in pixels")
    height: int = Field(..., description="Height of the image in pixels")
    format: str = Field(..., description="Image format (e.g., 'jpeg', 'png')")
    size_kb: float | None = Field(None, description="Size of the image in kilobytes")


class VideoResult(BaseModel):
    """Video result in the task response."""
    id: str = Field(..., description="Generated video ID; globally unique")
    url: str = Field(..., description="URL for the generated video")
    duration: str = Field(..., description="Total video duration in seconds")


class TaskResult(BaseModel):
    """Task result containing generated media."""
    images: Optional[list[ImageResult]] = Field(
        None,
        description="List of generated images"
    )
    videos: Optional[list[VideoResult]] = Field(
        None,
        description="List of generated videos"
    )


class CallbackRequest(BaseModel):
    """Callback request model for Kling AI async task updates."""
    task_id: str = Field(..., description="Task ID generated by the system")
    status: TaskStatus = Field(..., description="Current status of the task")
    created_at: datetime = Field(..., description="When the task was created")
    updated_at: datetime = Field(..., description="When the task was last updated")
    progress: float | None = Field(None, ge=0, le=100, description="Progress percentage (0-100)")
    error_message: str | None = Field(None, description="Error message if the task failed")
    task_info: TaskInfo = Field(..., description="Task creation parameters")
    task_result: Optional[TaskResult] = Field(
        None,
        description="Generated media results when task is complete"
    )
